job('task6-job1') {
    description('This is job1')
        scm {
                 github('aasthasaxena217/Jenkins_groovy.git','master')
     }
     steps {
                 shell("cp * -vrf /home/jenkins")
          }
          triggers {
                   scm('* * * * *')
                   }
           triggers {
                              upstream('Admin Job (Seed)', 'SUCCESS')
                              }
}


job('task6-job2') {
     description('This is job2')
          scm {
                  github('aasthasaxena217/Jenkins_groovy.git','master')
                  }
          triggers {
                           upstream('task6-job1','SUCCESS')
                           }
          steps {
                  shell('''
                          if ls /home/jenkins | grep php
                          then 
                                 if kubectl get deployment --selector "app in (https)" | grep httpd-web
                                 then 
                                         kubectl apply -f deployment.yml
                                  else 
                                         kubectl create -f deployment.yml
                                  fi
                                  POD=$(kubectl get pod -l app=httpd -o jsonpath="{.items[0].metadata.nam}")
                                  kubectl cp /home/jenkins/index.php $(POD):/var/www/html
                           fi
                           ''')
                 }
}

job('task6-job3) {
    description('job3')
        triggers {
                        upstream('task-6-job2', 'SUCCESS')
                        }
   steps {
       shell('''
               status=$(curl -o /dev/null -s -w "%{http_code}" http://192.168.99.103:9001)
               if [[ $status == 200 ]]
               then
                      exit 0
               else 
                      exit 1
               fi
               ''')
                       }
    publishers {
         extendedEmail {
              reciptentList('aasthasaxena217@gmail.com')
              defaultSubject('Job status')
                 attachBuidLog(attachBuildLog = true)
              defaultContent('Status Report')
              contentType('text/html')
              triggers {
                 always {
                    subject('build Status')
                    content('Body')
                    sendTo {
                        developers()
                        recipentList()
                    }
                 }
              }
         }
    }
}

                    
                
